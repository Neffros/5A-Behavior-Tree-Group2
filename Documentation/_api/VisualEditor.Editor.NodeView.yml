### YamlMime:ManagedReference
items:
- uid: VisualEditor.Editor.NodeView
  commentId: T:VisualEditor.Editor.NodeView
  id: NodeView
  parent: VisualEditor.Editor
  children:
  - VisualEditor.Editor.NodeView.#ctor(NodeEditorInstanceMetadata)
  - VisualEditor.Editor.NodeView.Input
  - VisualEditor.Editor.NodeView.Node
  - VisualEditor.Editor.NodeView.OnNodeSelected
  - VisualEditor.Editor.NodeView.OnSelected
  - VisualEditor.Editor.NodeView.Output
  - VisualEditor.Editor.NodeView.SetPosition(Rect)
  langs:
  - csharp
  - vb
  name: NodeView
  nameWithType: NodeView
  fullName: VisualEditor.Editor.NodeView
  type: Class
  source:
    id: NodeView
    path: ''
    startLine: 961
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  syntax:
    content: 'public class NodeView : Node'
    content.vb: >-
      Public Class NodeView
          Inherits Node
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VisualEditor.Editor.NodeView.OnNodeSelected
  commentId: F:VisualEditor.Editor.NodeView.OnNodeSelected
  id: OnNodeSelected
  parent: VisualEditor.Editor.NodeView
  langs:
  - csharp
  - vb
  name: OnNodeSelected
  nameWithType: NodeView.OnNodeSelected
  fullName: VisualEditor.Editor.NodeView.OnNodeSelected
  type: Field
  source:
    id: OnNodeSelected
    path: ''
    startLine: 962
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  syntax:
    content: public Action<NodeView> OnNodeSelected
    return:
      type: System.Action{VisualEditor.Editor.NodeView}
    content.vb: Public OnNodeSelected As Action(Of NodeView)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VisualEditor.Editor.NodeView.Node
  commentId: F:VisualEditor.Editor.NodeView.Node
  id: Node
  parent: VisualEditor.Editor.NodeView
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: NodeView.Node
  fullName: VisualEditor.Editor.NodeView.Node
  type: Field
  source:
    id: Node
    path: ''
    startLine: 963
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  syntax:
    content: public NodeEditorInstanceMetadata Node
    return:
      type: NodeEditorInstanceMetadata
    content.vb: Public Node As NodeEditorInstanceMetadata
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VisualEditor.Editor.NodeView.Input
  commentId: F:VisualEditor.Editor.NodeView.Input
  id: Input
  parent: VisualEditor.Editor.NodeView
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: NodeView.Input
  fullName: VisualEditor.Editor.NodeView.Input
  type: Field
  source:
    id: Input
    path: ''
    startLine: 964
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  syntax:
    content: public Port Input
    return:
      type: Port
    content.vb: Public Input As Port
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VisualEditor.Editor.NodeView.Output
  commentId: F:VisualEditor.Editor.NodeView.Output
  id: Output
  parent: VisualEditor.Editor.NodeView
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: NodeView.Output
  fullName: VisualEditor.Editor.NodeView.Output
  type: Field
  source:
    id: Output
    path: ''
    startLine: 965
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  syntax:
    content: public Port Output
    return:
      type: Port
    content.vb: Public Output As Port
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VisualEditor.Editor.NodeView.#ctor(NodeEditorInstanceMetadata)
  commentId: M:VisualEditor.Editor.NodeView.#ctor(NodeEditorInstanceMetadata)
  id: '#ctor(NodeEditorInstanceMetadata)'
  parent: VisualEditor.Editor.NodeView
  langs:
  - csharp
  - vb
  name: NodeView(NodeEditorInstanceMetadata)
  nameWithType: NodeView.NodeView(NodeEditorInstanceMetadata)
  fullName: VisualEditor.Editor.NodeView.NodeView(NodeEditorInstanceMetadata)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 970
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  summary: "\nGenerates a custom nodeview from node meta data\n"
  example: []
  syntax:
    content: public NodeView(NodeEditorInstanceMetadata node)
    parameters:
    - id: node
      type: NodeEditorInstanceMetadata
    content.vb: Public Sub New(node As NodeEditorInstanceMetadata)
  overload: VisualEditor.Editor.NodeView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VisualEditor.Editor.NodeView.SetPosition(Rect)
  commentId: M:VisualEditor.Editor.NodeView.SetPosition(Rect)
  id: SetPosition(Rect)
  parent: VisualEditor.Editor.NodeView
  langs:
  - csharp
  - vb
  name: SetPosition(Rect)
  nameWithType: NodeView.SetPosition(Rect)
  fullName: VisualEditor.Editor.NodeView.SetPosition(Rect)
  type: Method
  source:
    id: SetPosition
    path: ''
    startLine: 1012
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  summary: "\nSet a new position for a visual node\n"
  example: []
  syntax:
    content: public override void SetPosition(Rect newPos)
    parameters:
    - id: newPos
      type: Rect
    content.vb: Public Overrides Sub SetPosition(newPos As Rect)
  overload: VisualEditor.Editor.NodeView.SetPosition*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VisualEditor.Editor.NodeView.OnSelected
  commentId: M:VisualEditor.Editor.NodeView.OnSelected
  id: OnSelected
  parent: VisualEditor.Editor.NodeView
  langs:
  - csharp
  - vb
  name: OnSelected()
  nameWithType: NodeView.OnSelected()
  fullName: VisualEditor.Editor.NodeView.OnSelected()
  type: Method
  source:
    id: OnSelected
    path: ''
    startLine: 1022
  assemblies:
  - cs.temp.dll
  namespace: VisualEditor.Editor
  summary: "\nCallback sent when a node is selected\n"
  example: []
  syntax:
    content: public override void OnSelected()
    content.vb: Public Overrides Sub OnSelected
  overload: VisualEditor.Editor.NodeView.OnSelected*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VisualEditor.Editor
  commentId: N:VisualEditor.Editor
  name: VisualEditor.Editor
  nameWithType: VisualEditor.Editor
  fullName: VisualEditor.Editor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{VisualEditor.Editor.NodeView}
  commentId: T:System.Action{VisualEditor.Editor.NodeView}
  parent: System
  definition: System.Action`1
  name: Action<NodeView>
  nameWithType: Action<NodeView>
  fullName: System.Action<VisualEditor.Editor.NodeView>
  nameWithType.vb: Action(Of NodeView)
  fullName.vb: System.Action(Of VisualEditor.Editor.NodeView)
  name.vb: Action(Of NodeView)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VisualEditor.Editor.NodeView
    name: NodeView
    nameWithType: NodeView
    fullName: VisualEditor.Editor.NodeView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VisualEditor.Editor.NodeView
    name: NodeView
    nameWithType: NodeView
    fullName: VisualEditor.Editor.NodeView
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NodeEditorInstanceMetadata
  isExternal: true
  name: NodeEditorInstanceMetadata
  nameWithType: NodeEditorInstanceMetadata
  fullName: NodeEditorInstanceMetadata
- uid: Port
  isExternal: true
  name: Port
  nameWithType: Port
  fullName: Port
- uid: VisualEditor.Editor.NodeView.#ctor*
  commentId: Overload:VisualEditor.Editor.NodeView.#ctor
  name: NodeView
  nameWithType: NodeView.NodeView
  fullName: VisualEditor.Editor.NodeView.NodeView
- uid: VisualEditor.Editor.NodeView.SetPosition*
  commentId: Overload:VisualEditor.Editor.NodeView.SetPosition
  name: SetPosition
  nameWithType: NodeView.SetPosition
  fullName: VisualEditor.Editor.NodeView.SetPosition
- uid: Rect
  commentId: '!:Rect'
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: Rect
- uid: VisualEditor.Editor.NodeView.OnSelected*
  commentId: Overload:VisualEditor.Editor.NodeView.OnSelected
  name: OnSelected
  nameWithType: NodeView.OnSelected
  fullName: VisualEditor.Editor.NodeView.OnSelected
